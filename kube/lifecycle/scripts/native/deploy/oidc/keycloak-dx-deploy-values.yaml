global:
  storageClass: "manual"

image:
  registry: "IMAGE_REGISTRY_NAME"
  repository: "IMAGE_REPOSITORY_NAME"
  tag: "IMAGE_TAG_NAME"

# enable production mode
production: true

# production mode requires TLS to be set to true, but can be disabled if ingress handles SSL off-loading. 
# We can use production mode and disable TLS only if proxy is set to 'edge'.
tls:
  enabled: false
  autoGenerated: true

# reverse Proxy mode edge, reencrypt, passthrough or none.
proxy: edge

# DX already sits on /, need to set a different relative path (/auth/)
httpRelativePath: /auth/

# Leverage ingress and wire it up
ingress:
  enabled: true
  ingressClassName: "nginx"
  hostname: HOST_NAME
  tls: true
  selfSigned: true

# Do not deploy own postgres; we reuse DX postgres
postgresql:
  enabled: false
  volumePermissions:
    enabled: true

## External PostgreSQL configuration
## All of these values are only used when postgresql.enabled is set to false
externalDatabase:
  host: "POSTGRESQL_DB_HOST"
  port: 5432
  database: "POSTGRESQL_DB_NAME"
  existingSecret: "POSTGRESQL_EXISTING_SECRET_NAME"
  existingSecretUserKey: "POSTGRESQL_EXISTING_SECRET_USER_KEY"
  existingSecretPasswordKey: "POSTGRESQL_EXISTING_SECRET_PASSWORD_KEY"

## @param extraStartupArgs Extra default startup args
##
extraStartupArgs: "--import-realm --override=true"

## DigitalSolutions product SSO configuration parameters
## Values in the section are applied when you install the helm chart for the first time. 
## Changes to these values won't be updated when you do subsequent upgrade using helm upgrade.
ssoConfiguration:
  ## Indicates if realm configuration for sso should be created or not.
  enabled: true
  ## Realm name.
  realmName: "REALM_NAME"
  ## Clients for the realm
  clients:
  - name: "HCL Digital Experience"
    description: "HCL Digital Experience"
    clientId: "DX_OIDC_CLIENT_ID"
    secret: "DX_OIDC_CLIENT_SECRET"
    authorizationServicesEnabled: true
    defaultClientScopes:
      - "web-origins"
      - "acr"
      - "openid"
      - "profile"
      - "roles"
      - "email"
    redirectUris:
      - "DX_REDIRECT_URL_1"
      - "DX_REDIRECT_URL_2"
    webOrigins:
      - "https://HOST_NAME"
    frontchannelLogout: true
    attributes:
      post.logout.redirect.uris: "DX_POST_LOGOUT_REDIRECT_URIS"
      frontchannel.logout.url: "DX_FRONTCHANNEL_LOGOUT_URL"
  - name: "HCL People Service"
    description: "HCL People Service"
    clientId: "PEOPLE_SERVICE_OIDC_CLIENT_ID"
    secret: "PEOPLE_SERVICE_OIDC_CLIENT_SECRET"
    authorizationServicesEnabled: true
    defaultClientScopes:
      - "web-origins"
      - "acr"
      - "openid"
      - "profile"
      - "roles"
      - "email"
    redirectUris:
      - "PEOPLE_SERVICE_REDIRECT_URI_1"
      - "PEOPLE_SERVICE_REDIRECT_URI_2"
    webOrigins:
      - "https://HOST_NAME"
    frontchannelLogout: true
    attributes:
      post.logout.redirect.uris: "PEOPLE_SERVICE_POST_LOGOUT_REDIRECT_URIS"
      frontchannel.logout.url: "PEOPLE_SERVICE_FRONTCHANNEL_LOGOUT_URL"
  ## User federation configuration
  userFederation:
    ## Indicates if user federations is enabled and should import configuration
    enabled: true
    ## Display name of provider when linked in the Admin UI.
    name: "dx-open-ldap"
    ## Type of the authentication method used during LDAP bind operation. Possible values `none`, `simple`.
    authType: "simple"
    ## Connection url for connecting to an LDAP system, e.g. ldap://dx-deployment-open-ldap.dxns.svc.cluster.local:1389
    connectionUrl: "OPENLDAP_CONNECTION_URL"
    ## User's DN, e.g. "dc=dx,dc=com"
    usersDn: "dc=dx,dc=com"
    ## Comma separated user object classes, e.g. "inetOrgPerson, organizationalPerson"
    userObjectClasses: "inetOrgPerson, organizationalPerson"
    ## Name of the LDAP attribute, which is mapped as Keycloak username.
    usernameLDAPAttribute: "uid"
    ## Name of the LDAP attribute, which is used as a unique object identifier (UUID) for objects in LDAP.
    uuidLDAPAttribute: "uid"
    ## Bind DN, e.g. "cn=dx_user,dc=dx,dc=com"
    bindDn: "cn=dx_user,dc=dx,dc=com"
    ## Bind credentials, to access LDAP and sync user's into Keycloak
    bindCredential: "OPEN_LDAP_BIND_CREDENTIAL"
