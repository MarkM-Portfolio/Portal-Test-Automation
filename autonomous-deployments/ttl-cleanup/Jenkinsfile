/*
 ********************************************************************
 * Licensed Materials - Property of HCL                             *
 *                                                                  *
 * Copyright HCL Technologies Ltd. 2023. All Rights Reserved.       *
 *                                                                  *
 * Note to US Government Users Restricted Rights:                   *
 *                                                                  *
 * Use, duplication or disclosure restricted by GSA ADP Schedule    *
 ********************************************************************
 */

// Import the shared library with the name configured in Jenkins
@Library("dx-shared-library") _

def expiredEC2List = []
// Create object to store parameters with values
def pipelineParameters = [:]

pipeline {
    agent {
        label 'build_infra'
    }

    stages {
        stage("Load modules and configuration") {
            steps {
                script {
                    dxParametersLoadFromFile(pipelineParameters, "${env.WORKSPACE}/autonomous-deployments/ttl-cleanup/parameters.yaml")
                    // Add code here for initialization
                    println "Initialize EC2 TTL cleanup"
                    expiredEC2List = dxEC2TtlListExpired()
                    println "inside EC2 TTL cleanup"
                    print expiredEC2List

                }
            }
        }

        stage('Undeploying the application in k8 environment') {
            steps {
                script {
                    println "Undeploying the application in k8 environment inside EC2 TTL cleanup"
                     expiredEC2List.each { instance ->
                        buildParams = []
                        buildParams.add(
                            [$class: 'StringParameterValue',
                                name: 'INSTANCE_NAME',
                                value: instance['Name']])
                        buildParams.add(
                            [$class: 'StringParameterValue',
                                name: 'KUBE_FLAVOUR',
                                value: 'native'])
                        buildParams.add(
                            [$class: 'StringParameterValue',
                                name: 'DOMAIN_SUFFIX',
                                value: '.team-q-dev.com'])
                        buildParams.add(
                            [$class: 'StringParameterValue',
                                name: 'HOSTED_ZONE',
                                value: 'Z3OEC7SLEHQ2P3'])
                        build(job: "${pipelineParameters.KUBE_UNDEPLOY_JOB}", 
                            parameters: buildParams, 
                            propagate: false,
                            wait: false)
                    }
                }
            }
        }
    }

    post {
        cleanup {
            /* Cleanup workspace */
            dxWorkspaceDirectoriesCleanup()
        }
    }
}